<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="clr-namespace:AutorunMaster.Converters"
    mc:Ignorable="d">

    <converters:AutorunTypeToStringConverter x:Key="AutorunTypeToStringConverter"></converters:AutorunTypeToStringConverter>

    <DataTemplate x:Key="AutorunObjectDataTemplate">
        <Grid Margin="0,1" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="150*" />
                <ColumnDefinition Width="150*" />
                <ColumnDefinition Width="270*" />
                <ColumnDefinition Width="100*" />
                <ColumnDefinition Width="120*" />
                <ColumnDefinition Width="120*" />
                <ColumnDefinition Width="120*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid Margin="5,0">
                <Image
                    Width="32"
                    Height="32"
                    Source="{Binding Icon}" />
            </Grid>
            <StackPanel
                Grid.Column="1"
                Margin="10,0,0,0"
                Orientation="Vertical" Width="130">
                <TextBlock
                    Text="File name" Style="{DynamicResource HeaderTextBlockStyle}" />
                <TextBlock
                    Text="{Binding FileName}" Style="{DynamicResource TextBlockStyle}">
                    <TextBlock.ToolTip>
                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                            <TextBlock Text="{Binding DataContext.FileName}" />
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StackPanel>
            <StackPanel
                Grid.Column="2"
                Margin="10,0,0,0"
                Orientation="Vertical" Width="150">
                <TextBlock
                    Text="Command parameters" Style="{DynamicResource HeaderTextBlockStyle}" />
                <TextBlock
                    Text="{Binding CommandParameters}" Style="{DynamicResource TextBlockStyle}">
                    <TextBlock.ToolTip>
                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                            <TextBlock Text="{Binding DataContext.CommandParameters}" />
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StackPanel>
            <StackPanel
                Grid.Column="3"
                Width="270"
                Margin="10,0,0,0"
                Orientation="Vertical">
                <TextBlock
                    Text="File path" Style="{DynamicResource HeaderTextBlockStyle}" />
                <TextBlock
                    Margin="0,4,0,0"
                    Text="{Binding FilePath}" Style="{DynamicResource TextBlockStyle}">
                    <TextBlock.ToolTip>
                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                            <TextBlock Text="{Binding DataContext.FilePath}" />
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StackPanel>
            <StackPanel
                Grid.Column="4"
                Width="100"
                Margin="10,0,0,0"
                Orientation="Vertical">
                <TextBlock
                    Text="Autorun type" Style="{DynamicResource HeaderTextBlockStyle}" />
                <TextBlock
                    Text="{Binding AutorunType, Converter={StaticResource AutorunTypeToStringConverter}}" Style="{DynamicResource TextBlockStyle}" />
            </StackPanel>
            <StackPanel
                Grid.Column="5"
                Width="100"
                Margin="10,0,0,0"
                Orientation="Vertical">
                <TextBlock
                    Text="Has certificate" Style="{DynamicResource HeaderTextBlockStyle}" />
                <CheckBox
                    Margin="0,5,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsChecked="{Binding HasCertificate}"
                    IsHitTestVisible="False" />
            </StackPanel>
            <StackPanel
                Grid.Column="6"
                Width="120"
                Margin="10,0,0,0"
                Orientation="Vertical">
                <TextBlock
                    Text="Correctness of certificate" Style="{DynamicResource HeaderTextBlockStyle}">
                    <TextBlock.ToolTip>
                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
                            <TextBlock Text="Correctness of certificate" />
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
                <CheckBox
                    Margin="0,5,0,0"
                    HorizontalAlignment="Center"
                    IsChecked="{Binding IsVerifiedCertificate}"
                    IsHitTestVisible="False" />
            </StackPanel>
            <StackPanel
                Grid.Column="7"
                Margin="10,0"
                Orientation="Vertical" Width="100">
                <TextBlock
                    Text="Manufacturer" Style="{DynamicResource HeaderTextBlockStyle}" />
                <TextBlock
                    Text="{Binding ManufacturerName}" Style="{DynamicResource TextBlockStyle}" />
            </StackPanel>
            <Grid.InputBindings>
                <MouseBinding Command="{Binding DataContext.OpenFileLocationCommand, ElementName=AutorunListView}" MouseAction="LeftDoubleClick">
                    <MouseBinding.CommandParameter>
                        <Binding Path="FilePath" />
                    </MouseBinding.CommandParameter>
                </MouseBinding>
            </Grid.InputBindings>
        </Grid>

    </DataTemplate>

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="border"
                        Margin="5,5,5,0"
                        Background="White"
                        BorderBrush="#FFE2E2E2"
                        BorderThickness="1"
                        CornerRadius="3">
                        <ContentPresenter />
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="3"
                                Opacity="0.1"
                                ShadowDepth="3" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFE6EBEE" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFF3F3F3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Foreground" Value="#33B6EF"></Setter>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Width="19" Height="17">
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="1" CornerRadius="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="#FF33B6EF" Margin="1" Opacity="0" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>